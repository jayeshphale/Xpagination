{"ast":null,"code":"var _jsxFileName = \"D:\\\\Crio Assignments\\\\react-pagination\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport EmployeeTable from \"./components/EmployeeTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"https://geektrust.s3-ap-southeast-1.amazonaws.com/adminui-problem/members.json\";\nconst ITEMS_PER_PAGE = 10;\nconst App = () => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [error, setError] = useState(null);\n\n  // Fetch employee data from API\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(API_URL);\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch data\");\n        }\n        const data = await response.json();\n        setEmployees(data);\n      } catch (error) {\n        setError(error.message);\n        alert(\"Failed to fetch data\");\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Pagination Logic\n  const totalPages = Math.ceil(employees.length / ITEMS_PER_PAGE);\n  const startIndex = (currentPage - 1) * ITEMS_PER_PAGE;\n  const paginatedData = employees.slice(startIndex, startIndex + ITEMS_PER_PAGE);\n\n  // Handle Previous Button Click\n  const handlePrev = () => {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n\n  // Handle Next Button Click\n  const handleNext = () => {\n    if (currentPage < totalPages) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\",\n        textAlign: \"center\"\n      },\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(EmployeeTable, {\n      employees: paginatedData,\n      currentPage: currentPage,\n      totalPages: totalPages,\n      handlePrev: handlePrev,\n      handleNext: handleNext\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Q6PDixLvG9pKxkgNqNg7qFRVvuc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","EmployeeTable","jsxDEV","_jsxDEV","API_URL","ITEMS_PER_PAGE","App","_s","employees","setEmployees","currentPage","setCurrentPage","error","setError","fetchData","response","fetch","ok","Error","data","json","message","alert","totalPages","Math","ceil","length","startIndex","paginatedData","slice","handlePrev","handleNext","style","padding","children","color","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Crio Assignments/react-pagination/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport EmployeeTable from \"./components/EmployeeTable\";\r\n\r\nconst API_URL = \"https://geektrust.s3-ap-southeast-1.amazonaws.com/adminui-problem/members.json\";\r\nconst ITEMS_PER_PAGE = 10;\r\n\r\nconst App = () => {\r\n  const [employees, setEmployees] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Fetch employee data from API\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch(API_URL);\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch data\");\r\n        }\r\n        const data = await response.json();\r\n        setEmployees(data);\r\n      } catch (error) {\r\n        setError(error.message);\r\n        alert(\"Failed to fetch data\");\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Pagination Logic\r\n  const totalPages = Math.ceil(employees.length / ITEMS_PER_PAGE);\r\n  const startIndex = (currentPage - 1) * ITEMS_PER_PAGE;\r\n  const paginatedData = employees.slice(startIndex, startIndex + ITEMS_PER_PAGE);\r\n\r\n  // Handle Previous Button Click\r\n  const handlePrev = () => {\r\n    if (currentPage > 1) {\r\n      setCurrentPage(currentPage - 1);\r\n    }\r\n  };\r\n\r\n  // Handle Next Button Click\r\n  const handleNext = () => {\r\n    if (currentPage < totalPages) {\r\n      setCurrentPage(currentPage + 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\" }}>\r\n      {error ? (\r\n        <p style={{ color: \"red\", textAlign: \"center\" }}>Error: {error}</p>\r\n      ) : (\r\n        <EmployeeTable \r\n          employees={paginatedData} \r\n          currentPage={currentPage} \r\n          totalPages={totalPages}\r\n          handlePrev={handlePrev} \r\n          handleNext={handleNext} \r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,OAAO,GAAG,gFAAgF;AAChG,MAAMC,cAAc,GAAG,EAAE;AAEzB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACAC,SAAS,CAAC,MAAM;IACd,MAAMc,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACZ,OAAO,CAAC;QACrC,IAAI,CAACW,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;QACzC;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCX,YAAY,CAACU,IAAI,CAAC;MACpB,CAAC,CAAC,OAAOP,KAAK,EAAE;QACdC,QAAQ,CAACD,KAAK,CAACS,OAAO,CAAC;QACvBC,KAAK,CAAC,sBAAsB,CAAC;MAC/B;IACF,CAAC;IACDR,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMS,UAAU,GAAGC,IAAI,CAACC,IAAI,CAACjB,SAAS,CAACkB,MAAM,GAAGrB,cAAc,CAAC;EAC/D,MAAMsB,UAAU,GAAG,CAACjB,WAAW,GAAG,CAAC,IAAIL,cAAc;EACrD,MAAMuB,aAAa,GAAGpB,SAAS,CAACqB,KAAK,CAACF,UAAU,EAAEA,UAAU,GAAGtB,cAAc,CAAC;;EAE9E;EACA,MAAMyB,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIpB,WAAW,GAAG,CAAC,EAAE;MACnBC,cAAc,CAACD,WAAW,GAAG,CAAC,CAAC;IACjC;EACF,CAAC;;EAED;EACA,MAAMqB,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIrB,WAAW,GAAGa,UAAU,EAAE;MAC5BZ,cAAc,CAACD,WAAW,GAAG,CAAC,CAAC;IACjC;EACF,CAAC;EAED,oBACEP,OAAA;IAAK6B,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,EAC7BtB,KAAK,gBACJT,OAAA;MAAG6B,KAAK,EAAE;QAAEG,KAAK,EAAE,KAAK;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAF,QAAA,GAAC,SAAO,EAACtB,KAAK;IAAA;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAEnErC,OAAA,CAACF,aAAa;MACZO,SAAS,EAAEoB,aAAc;MACzBlB,WAAW,EAAEA,WAAY;MACzBa,UAAU,EAAEA,UAAW;MACvBO,UAAU,EAAEA,UAAW;MACvBC,UAAU,EAAEA;IAAW;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACjC,EAAA,CAzDID,GAAG;AAAAmC,EAAA,GAAHnC,GAAG;AA2DT,eAAeA,GAAG;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}